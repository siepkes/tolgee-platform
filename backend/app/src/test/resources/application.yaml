spring:
  autoconfigure:
    exclude:
      - org.redisson.spring.starter.RedissonAutoConfiguration
      - org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration
  jpa:
#    show-sql: true
    properties:
      hibernate:
        jdbc:
          batch_size: 1000
        order_inserts: true
        order_updates: true
        dialect: io.tolgee.dialects.postgres.CustomPostgreSQLDialect
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
    converters:
      preferred-json-mapper: jackson
  data:
    redis:
      repositories:
        enabled: false
  main:
    allow-bean-definition-overriding: true
    lazy-initialization: true
  liquibase:
    change-log: classpath:db/changelog/schema.xml
  batch:
    job:
      enabled: false
    jdbc:
      initialize-schema: always
  jmx:
    enabled: false
  datasource:
    maximum-pool-size: 100
tolgee:
  postgres-autostart:
    enabled: true
    container-name: tolgee_backend_tests_postgres
    port: 55433
  data-path: ./build/test_data
  authentication:
    native-enabled: true
    registrationsAllowed: true
    oauth2:
      client-id: fake_client_id
      client-secret: fake_client_secret
      scopes:
        - openid
        - email
        - profile
      authorization-url: "https://example.com/authorize"
      token-url: "https://example.com/oauth/token"
      user-url: "https://example.com/userinfo"
  internal:
    fake-mt-providers: true
    mock-free-plan: true
  cache:
    caffeine-max-size: 1000
  machine-translation:
    free-credits-amount: -1
    google:
      api-key: aaa
    aws:
      accessKey: aaa
      secretKey: aaa
  billing:
    enabled: false
  telemetry:
    enabled: false
    server: http://localhost:8080
  batch:
    concurrency: 10
logging:
  level:
    io.tolgee.billing.api.v2.OrganizationInvoicesController: DEBUG
    io.tolgee.batch.BatchJobActionService: DEBUG
    io.tolgee.component.atomicLong.AtomicLongProvider: DEBUG
    io.tolgee: DEBUG
